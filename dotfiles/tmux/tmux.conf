
#set-window-option -g automatic-rename on

#set -g status-justify centre # center align window list

#set-window-option -g pane-base-index 1






#send-keys -t 0 'y' Enter
#unbind-key -T copy-mode-vi v
#unbind-key -T copy-mode R
#setw -g mode-keys vi
#setw -g mode-mouse on
#setw -g monitor-activity on





############################################################################################

set-option -sa terminal-overrides ",xterm*:Tc"

# window title
set-option -g set-titles on
set-option -g set-titles-string "#S / #W"




# start numbering at 1
set -g base-index 1
set -g pane-base-index 1
set-option -g renumber-windows on



# default shell
# set -g default-shell /usr/bin/zsh
#set -g default-shell /usr/bin/bash


# Allows for faster key repetition
set -s escape-time 0 # 50, 0
# repeat time
set-option -g repeat-time 10


# copy to system clipboard
set-option -g set-clipboard on

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on



# enable vi mode
setw -g mode-keys vi


# name windows after the current directory, not the process
set-option -g status-interval 5
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'




# useful bindings
# pref + t choose tree
# pref + I load plugins
# pref + i session info
# pref + tab completion
# pref + w choose window





# BINDINGS

# leader key
unbind C-b
set -g prefix C-s
bind C-s send-prefix



#bind-key t choose-tree -s -w -N
bind-key t choose-tree -s -w
bind-key g clock-mode

bind-key u display-panes

bind-key y set-option -g status # toggle status bar

#unbind-key -n C-BSpace

bind -n M-: command-prompt


#############################
# scripts


# view man pages via manpages.sh
unbind m
bind-key -r m run-shell "tmux new-window ~/.config/tmux/manpages.sh window"
bind-key -r M-m run-shell "tmux split-window -l '50%' -h ~/.config/tmux/manpages.sh"
bind-key -r M-M run-shell "tmux split-window -l '50%' -v ~/.config/tmux/manpages.sh"

# view cheatsheet via cht.sh
bind-key -r i run-shell "tmux new-window ~/.config/tmux/cheatsheet.sh window"
bind-key -r M-i run-shell "tmux split-window -h ~/.config/tmux/cheatsheet.sh"
bind-key -r M-I run-shell "tmux split-window -v ~/.config/tmux/cheatsheet.sh"



# code runner
# bind-key -r r run-shell "~/.config/tmux/run.sh vsplit"
# bind-key -r M-r run-shell "~/.config/tmux/run.sh split"
# bind-key -r M-R run-shell "~/.config/tmux/run.sh window"


set -g @plugin 'lukasx999/tmux-code-runner'
set -g @code_runner_show_time on


#############################




# PANES

# kill pane
bind-key -r c kill-pane # used to be leader + x

# splits
bind-key -r v split-window -h -c "#{pane_current_path}"
bind-key -r s split-window -v -c "#{pane_current_path}"
# default binds
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# focus
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r h select-pane -L
bind-key -r l select-pane -R
# using meta
bind -n M-k select-pane -U
bind -n M-j select-pane -D
bind -n M-h select-pane -L
bind -n M-l select-pane -R

# resizing
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5
# using meta
bind -n M-J resize-pane -D 5
bind -n M-K resize-pane -U 5
bind -n M-H resize-pane -L 5
bind -n M-L resize-pane -R 5



# WINDOWS

# management
#bind-key -r n new-window
#bind-key -r Enter new-window
bind-key -r Enter new-window -c "#{pane_current_path}"
bind-key -r q kill-window

# move between windows
bind -r - last-window
bind -n M-- last-window
bind -r . next-window
bind -r , previous-window
bind -n M-. next-window
bind -n M-, previous-window


bind-key 1 select-window -t :1
bind-key 2 select-window -t :2
bind-key 3 select-window -t :3
bind-key 4 select-window -t :4
bind-key 5 select-window -t :5
bind-key 6 select-window -t :6
bind-key 7 select-window -t :7
bind-key 8 select-window -t :8
bind-key 9 select-window -t :9


# COPY MODE
bind-key Space copy-mode # used to be leader + c

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi _ send-keys -X back-to-indentation
bind-key -T copy-mode-vi 'C-v' send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"

############################################################################################

# statusbar:

#plugins
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'MunifTanjim/tmux-mode-indicator'

set -g @mode_indicator_prefix_prompt '  WAIT '
set -g @mode_indicator_copy_prompt '  COPY '
set -g @mode_indicator_sync_prompt '  SYNC '
set -g @mode_indicator_empty_prompt '  TMUX '
#set -g @mode_indicator_empty_prompt '  TMUX '

set -g @mode_indicator_prefix_mode_style 'bg=blue,fg=black bold'
set -g @mode_indicator_copy_mode_style 'bg=yellow,fg=black bold'
set -g @mode_indicator_sync_mode_style 'bg=red,fg=black bold'
set -g @mode_indicator_empty_mode_style 'bg=cyan,fg=black bold'



# clock mode leader + t
setw -g clock-mode-colour colour1

# copy mode
setw -g mode-style 'fg=colour0 bg=colour3 bold'


# statusbar
set -g status-position top # bottom, top
set -g status-justify left # centre, left
set -g status-style 'fg=colour7 bg=default' # for all widgets / bg=colour0 for black bg


# left
set -g status-left ' #[fg=colour8]/ #[fg=colour1]#S #[fg=colour8]/ #{tmux_mode_indicator} #[fg=colour8].. ' # 󰣇
# set -g status-left '󰣇 #[fg=colour8]/ #[fg=colour1]#S #[fg=colour8]/ #{tmux_mode_indicator} #[fg=colour8].. ' # 󰣇
set -g status-left-style 'fg=colour3'
set -g status-left-length 30 # 10


# right

set -g status-right '#[fg=colour4]  #{cpu_percentage} #[fg=default]|#[fg=colour6]  #{ram_percentage} #[fg=default]|#[fg=colour3]  %d.%m.%Y #[fg=default]|#[fg=colour1]  %H:%M '
set -g status-right-style 'fg=colour8'
set -g status-right-length 50



# window list

# current
setw -g window-status-current-style 'fg=colour0 bg=colour4 bold'
#setw -g window-status-current-format ' #I #W #F '

setw -g window-status-current-format ' #I #W '
#setw -g window-status-current-format ' #I #W #{?window_zoomed_flag, 󰍉 ,}'
# setw -g window-status-current-format ' #I #W #F '


# always
setw -g window-status-style 'fg=colour1 bg=default dim'
# setw -g window-status-format ' #I #[fg=colour7]#W #[fg=colour1]'
setw -g window-status-format ' #I #[fg=colour7]#W '


setw -g window-status-last-style 'fg=colour3 bg=default bold dim'
setw -g window-status-separator ' '


############################################################################################


setw -g window-status-bell-style 'fg=colour2 bg=colour1 bold'

# messages
set -g message-style 'fg=colour2 bg=colour0 bold'


# add padding
setw -g pane-border-status top # bottom, off
#setw -g pane-border-format ' #{pane_current_command} ' # ─
setw -g pane-border-format '─'


# style pane borders
setw -g pane-active-border-style 'fg=colour3 bg=default'
setw -g pane-border-style 'fg=colour8 bg=default'
setw -g pane-border-lines single # heavy, single, double, simple, number


############################################################################################



# completions
set -g @plugin 'laktak/extrakto'

#set -g @extrakto_split_size "15"
#set -g @extrakto_clip_tool "xsel --input --clipboard" # works better for nvim
set -g @extrakto_fzf_unset_default_opts "false"  # keep our custom FZF_DEFAULT_OPTS

set -g @extrakto_key "tab"      # use tab to copy to clipboard

set -g @extrakto_copy_key "tab"      # use tab to copy to clipboard
set -g @extrakto_insert_key "enter"  # use enter to insert selection

set -g @extrakto_popup_size 90%
set -g @extrakto_fzf_layout reverse

# set -g @extrakto_filter_key "ctrl-f"
# set -g @extrakto_grab_key "ctrl-g"
# set -g @extrakto_edit_key "ctrl-e"
# set -g @extrakto_open_key "ctrl-o"



# popups
#bind-key u run-shell "tmux popup -E zearch"
#tmux bind-key S run-shell "tmux popup -y 10 -w 100 -h 20 -E $CURRENT_DIR/bin/tmux-cht-sh.sh"

# better mouse support
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g mouse on

############################################################################################

# session manager

set -g @plugin 'omerxx/tmux-sessionx'

set -g @sessionx-bind 'o'
#set -g @sessionx-x-path '~/Desktop'
set -g @sessionx-custom-paths '~/Desktop,~/Desktop/Code'
#set -g @sessionx-filter-current 'false'
#set -g @sessionx-window-mode 'on'
#set -g @sessionx-tree-mode 'on'
#set -g @sessionx-preview-location 'right'
#set -g @sessionx-preview-ratio '55%'
#set -g @sessionx-preview-enabled 'false'
#set -g @sessionx-window-height '90%'
#set -g @sessionx-window-width '75%'


############################################################################################

# auto save enviroment and restore after reboot

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'


############################################################################################



#set -g window-active-style bg=black
#set -g window-style bg=white

#set -g pane-active-border-style bg=default,fg=magenta
#set -g pane-border-style fg=green


#set -g default-terminal "tmux-256color"
set -as terminal-features ",kitty*:RGB"


#set -g pane-border-lines double


set -g history-limit 50000
set -g display-time 4000
#set -g status-interval 5
#set -g default-command "reattach-to-user-namespace -l $SHELL"
set -g status-keys emacs
set -g focus-events on

#bind r source-file '~/.config/tmux/tmux.conf'



# better terminal colors for vim
set -ag terminal-overrides ",xterm-256color:RGB"
#set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"


#set -g @plugin 'catppuccin/tmux'
#set -g @catppuccin_flavour 'mocha' # or frappe, macchiato, mocha




#set -g @plugin "janoamaral/tokyo-night-tmux"






set-option -g @plugin 'b0o/tmux-autoreload'


# seemless navigation with panes and vim splits
#set -g @plugin 'christoomey/vim-tmux-navigator'








# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run '~/.tmux/plugins/tpm/tpm'
run '~/.config/tmux/tpm/tpm'
